#!/usr/bin/env ruby
require 'rubygems'
gem 'gtk2applib', '~> 14.0'
require 'gtk2applib' # Gtk2AppLib defined


program = Gtk2AppLib::Program.new( {
	'name'		=> 'Ruby-Gnome Diary',
	'authors'	=> ['carlosjhr64@gmail.com'],
        'website'       => 'https://sites.google.com/site/gtk2applib/home/gtk2applib-applications/gtk2diary',
        'website_label' => 'Ruby-Gnome Diary',
	'license'	=> 'GPL',
	'copyright'	=> '2011-03-09 17:32:54',
	} )

begin
  require 'gtk2diaryapp' # Gtk2DiaryApp defined
  program.window do |window|

    # Create paned windows
    hpaned = Gtk2AppLib::Widgets::HPaned.new(window)
    hpaned.position = Gtk2DiaryApp::Configuration::PANE_POSITION
  
    # Control pane
    sw_control = Gtk2AppLib::Widgets::ScrolledWindow.new(hpaned)
    control_pane = Gtk2DiaryApp::ControlPane.new(sw_control)

    sw_results = Gtk2AppLib::Widgets::ScrolledWindow.new(hpaned)
    Gtk2DiaryApp::HOOKS[:vscrollbar] = sw_results.vscrollbar

    # Results pane
    results_pane = Gtk2DiaryApp::ResultsPane.new(sw_results)
    Gtk2DiaryApp::HOOKS[:results_pane] = results_pane
    today = Date.today # Date defined
    Gtk2DiaryApp::HOOKS[:results_pane].populate(nil,nil,nil,nil, Gtk2DiaryApp::Configuration::LATEST)

    window.show_all 
  end
rescue Exception
  $!.puts_bang!
ensure
  program.finalize
end

if Gtk2DiaryApp::Configuration::DAYS_TO_HOLD_BAK then
  require 'find'
  now = Time.now.to_i
  spd = 60*60*24
  Find.find(Configuration::DIARY_DIRECTORY){|fn|
    if fn=~/\.txt\.bak$/ then
      days_old = (now - File.mtime(fn).to_i)/spd
      File.unlink(fn) if days_old > Configuration::DAYS_TO_HOLD_BAK
    end
  }
end
