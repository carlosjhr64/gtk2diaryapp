#!/usr/bin/env ruby
require 'rubygems'
gem 'gtk2applib', '~> 7.2'
require 'gtk2applib'


program = Gtk2AppLib::Program.new( {
	:name		=> 'Ruby-Gnome Diary',
	:tooltip	=> 'Diary',
	:icon_name	=> 'Icon Test',
	:FILE		=> __FILE__,
	:lock		=> "Proceed anyways?",
	} )

include Gtk2AppLib
begin
  about = {
	:authors	=> ['carlosjhr64@gmail.com'],
        :website       => 'http://ruby-gnome-apps.blogspot.com/search/label/Diary',
        :website_label => 'Ruby-Gnome Diary',
	:license	=> 'GPL',
	:copyright	=> '2010-08-09 16:37:00',
	}
  program.window(about) do |window|
    require 'gtk2diaryapp'
    include Gtk2DiaryApp

    # Create paned windows
    hpaned = Gtk2AppLib::HPaned.new(window)
    hpaned.position = Configuration::PANE_POSITION
  
    # Control pane
    sw_control = Gtk2AppLib::ScrolledWindow.new(hpaned)
    control_pane = ControlPane.new(sw_control)

    sw_results = Gtk2AppLib::ScrolledWindow.new(hpaned)
    HOOKS[:vscrollbar] = sw_results.vscrollbar

    # Results pane
    results_pane = ResultsPane.new(sw_results)
    HOOKS[:results_pane] = results_pane
    today = Date.today
    HOOKS[:results_pane].populate( (today-Configuration::LATEST)..today )
 
  end
rescue Exception
  Gtk2AppLib.puts_bang!
ensure
  program.finalize
end

#if Configuration::DAYS_TO_HOLD_BAK then
#  require 'find'
#  now = Time.now.to_i
#  spd = 60*60*24
#  Find.find(Configuration::DIARY_DIRECTORY){|fn|
#    if fn=~/\.txt\.bak/ then
#      days_old = (now - File.mtime(fn).to_i)/spd
##      File.unlink(fn) if days_old > Configuration::DAYS_TO_HOLD_BAK
#    end
#  }
#end
